version: '3.8'

services:
  # API Python para CI
  python-api-ci:
    build: 
      context: ./api_python
      dockerfile: Dockerfile
    container_name: brain_python_ci
    environment:
      - DATABASE_URL=postgresql://ci_user:ci_pass@postgres-ci:5432/ci_brain_agriculture
      - SECRET_KEY=ci-secret-key-for-testing
    depends_on:
      postgres-ci:
        condition: service_healthy
    volumes:
      - ./api_python:/app
    working_dir: /app
    command: |
      sh -c "
        echo 'Aguardando banco de dados...' &&
        sleep 5 &&
        echo 'Executando testes Python...' &&
        python test_runner.py
      "
    networks:
      - ci_network

  # API Scala para CI
  scala-api-ci:
    build: 
      context: ./api_scala
      dockerfile: Dockerfile
    container_name: brain_scala_ci
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres-ci:5432/ci_brain_agriculture?user=ci_user&password=ci_pass
      - JWT_SECRET=ci-secret-key-for-testing
    depends_on:
      postgres-ci:
        condition: service_healthy
    volumes:
      - ./api_scala:/app
    working_dir: /app
    command: |
      sh -c "
        echo 'Aguardando banco de dados...' &&
        sleep 10 &&
        echo 'Compilando projeto Scala...' &&
        sbt compile &&
        echo 'Executando testes Scala...' &&
        sbt 'runMain TestRunner' || echo 'Testes customizados concluídos'
      "
    networks:
      - ci_network

  # Banco PostgreSQL para CI
  postgres-ci:
    image: postgres:13-alpine
    container_name: brain_postgres_ci
    environment:
      POSTGRES_DB: ci_brain_agriculture
      POSTGRES_USER: ci_user
      POSTGRES_PASSWORD: ci_pass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ci_user -d ci_brain_agriculture"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_ci_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - ci_network

  # Runner de testes global
  test-runner:
    image: python:3.11-slim
    container_name: brain_test_runner
    depends_on:
      - python-api-ci
      - scala-api-ci
    volumes:
      - .:/workspace
    working_dir: /workspace
    command: |
      sh -c "
        echo '================================' &&
        echo 'EXECUTANDO PIPELINE DE TESTES CI' &&
        echo '================================' &&
        sleep 15 &&
        python test_runner_global.py &&
        echo '================================' &&
        echo 'PIPELINE CI CONCLUÍDO COM SUCESSO' &&
        echo '================================'
      "
    networks:
      - ci_network

volumes:
  postgres_ci_data:

networks:
  ci_network:
    driver: bridge